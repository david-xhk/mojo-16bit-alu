module shifter (
    input a[16],     // 16-bit input for A
    input b[16],     // 16-bit input for B
    input alufn[6],  // 6-bit input for ALUFN opcode
    output out[16]   // 16-bit output from shifter unit
  ) {

  always {
    case (alufn[1:0]) {               // choose from ALUFN[1:0]
      b00:                            // if ALUFN[1:0] = 00, do SHL (shift left)
        out = a << b[3:0];
      b01:                            // if ALUFN[1:0] = 01, do SHR (shift right)
        out = a >> b[3:0];
      b11:                            // if ALUFN[1:0] = 11, do SRA (shift right arithmetic)
        out = $signed(a) >>> b[3:0];
      default:                        // otherwise output a
        out = a;
    }
  }
}

